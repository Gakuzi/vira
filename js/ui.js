/*
–≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (UI),
–∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–∞–∫ –≤ –ø–∞–Ω–µ–ª–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è (index.html), —Ç–∞–∫ –∏ –≤ –ø–∞–Ω–µ–ª–∏ –∞—É–¥–∏—Ç–æ—Ä–∞ (auditor.html).
*/
import { loadEvents } from './db.js';

// === –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ===

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞.
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
 */
export function showNotification(message) {
  const notif = document.getElementById('notification');
  if (notif) {
    notif.textContent = message;
    notif.style.display = 'block';
    setTimeout(() => {
      notif.style.display = 'none';
    }, 5000);
  }
}

// === –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç –∏ —Ç–µ–∫—Å—Ç–∞ ===

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –¥–∞—Ç–æ–π –≤ —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì.
 * @param {string} dateStr - –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO (YYYY-MM-DD).
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞.
 */
export function formatDate(dateStr) {
  if (!dateStr) return '';
  const d = new Date(dateStr);
  const day = String(d.getDate()).padStart(2, '0');
  const month = String(d.getMonth() + 1).padStart(2, '0');
  const year = d.getFullYear();
  return `${day}.${month}.${year}`;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú –ß–ß:–ú–ú.
 * @param {string} dateTimeStr - –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO.
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è.
 */
export function formatDateTime(dateTimeStr) {
  const d = new Date(dateTimeStr);
  const day = String(d.getDate()).padStart(2, '0');
  const month = String(d.getMonth() + 1).padStart(2, '0');
  const hours = String(d.getHours()).padStart(2, '0');
  const minutes = String(d.getMinutes()).padStart(2, '0');
  return `${day}.${month} ${hours}:${minutes}`;
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ ('–ü–Ω', '–í—Ç', ...).
 * @param {string} dateStr - –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO (YYYY-MM-DD).
 * @returns {string} –ù–∞–∑–≤–∞–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏.
 */
export function getDayName(dateStr) {
  const names = ['–í—Å', '–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±'];
  return names[new Date(dateStr).getDay()];
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç–∞—Ç—É—Å –Ω–µ–¥–µ–ª–∏ –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç.
 * @param {string} status - –°—Ç–∞—Ç—É—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'draft').
 * @returns {string} –†—É—Å—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞.
 */
export function getStatusText(status) {
  const texts = {
    draft: '–ß–µ—Ä–Ω–æ–≤–∏–∫',
    pending_approval: '–ù–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–∏',
    approved: '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ',
    in_progress: '–í —Ä–∞–±–æ—Ç–µ',
    completed: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'
  };
  return texts[status] || status;
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç.
 * @param {string} type - –¢–∏–ø —Å–æ–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'task').
 * @returns {string} –†—É—Å—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ —Ç–∏–ø–∞.
 */
export function getEventTypeText(type) {
  const types = {
    task: '–ó–∞–¥–∞—á–∞',
    interview: '–ò–Ω—Ç–µ—Ä–≤—å—é',
    note: '–ó–∞–º–µ—Ç–∫–∞',
    meeting: '–í—Å—Ç—Ä–µ—á–∞',
    comment: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
    scheme: '–°—Ö–µ–º–∞',
    document: '–î–æ–∫—É–º–µ–Ω—Ç'
  };
  return types[type] || type;
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è.
 * @param {string} type - –¢–∏–ø —Å–æ–±—ã—Ç–∏—è.
 * @returns {string} Emoji-–∏–∫–æ–Ω–∫–∞.
 */
export function getEventIcon(type) {
  const icons = {
    task: '‚úÖ',
    interview: 'üé§',
    note: 'üìù',
    meeting: 'üìÖ',
    comment: 'üí¨',
    scheme: 'üìä',
    document: 'üìé'
  };
  return icons[type] || 'üìÑ';
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –ö–ë, –ú–ë –∏ —Ç.–¥.
 * @param {number} bytes - –†–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö.
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä.
 */
export function formatFileSize(bytes) {
  if (bytes === 0) return '0 –ë';
  const k = 1024;
  const sizes = ['–ë', '–ö–ë', '–ú–ë', '–ì–ë'];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

// === –§—É–Ω–∫—Ü–∏–∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è ===

export async function renderWeeksForManager(weeks) {
  const container = document.getElementById('weeks-container');
  if (!container) return;

  container.innerHTML = weeks.map(week => `
    <div class="card">
      <div class="week-header">
        <div class="week-title" onclick="toggleWeek(${week.id})">
          üìÖ ${week.title} (${week.start_date} ‚Äì ${week.end_date})
        </div>
        <div class="week-meta">
          <span class="status-badge status-${week.status}">${getStatusText(week.status)}</span>
        </div>
      </div>
      <div class="progress-bar">
        <div class="progress-fill" style="width:${week.progress}%"></div>
      </div>
      <div class="days-grid" id="days-${week.id}" style="display:none;"></div>
    </div>
  `).join('');
}

export async function renderDaysForManager(weekId, week, events) {
  const container = document.getElementById(`days-${weekId}`);
  if (!container) return;

  const daysMap = {};
  events.forEach(e => {
    if (!daysMap[e.day_date]) daysMap[e.day_date] = [];
    daysMap[e.day_date].push(e);
  });

  const start = new Date(week.start_date);
  const end = new Date(week.end_date);
  let current = new Date(start);
  const daysHTML = [];

  while (current <= end) {
    const day = current.getDay();
    if (day !== 0 && day !== 6) {
      const dateStr = current.toISOString().split('T')[0];
      const plan = week.plan?.[dateStr] || [];

      daysHTML.push(`
        <div class="day-card">
          <div class="day-header">
            <div class="day-date">${formatDate(dateStr)} (${getDayName(dateStr)})</div>
          </div>
          
          ${plan.length ? `
            <div style="margin-bottom: 16px;">
              <strong>–ü–ª–∞–Ω:</strong>
              <ul style="margin-top: 8px; padding-left: 20px;">
                ${plan.map(task => `<li>${task}</li>`).join('')}
              </ul>
            </div>
          ` : '<p style="color:#64748b; font-style:italic;">–ü–ª–∞–Ω –Ω–µ –∑–∞–¥–∞–Ω</p>'}
          
          <div id="events-${weekId}-${dateStr}">
            ${(daysMap[dateStr] || []).map(e => `
              <div class="event">
                <div class="event-header">
                  <span class="event-author">${e.author}</span>
                  <span class="event-time">${new Date(e.created_at).toLocaleTimeString()}</span>
                </div>
                <div class="event-content">
                  <strong>${getEventTypeText(e.type)}:</strong> ${e.content}
                </div>
              </div>
            `).join('')}
          </div>
          
          <div class="day-actions">
            <button class="btn btn-warning" onclick="addMeeting(${weekId}, '${dateStr}')">üìÖ –í—Å—Ç—Ä–µ—á–∞</button>
          </div>
          
          <div class="comment-form">
            <div class="form-group">
              <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π / –í–æ–ø—Ä–æ—Å:</label>
              <textarea class="form-control" placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..." 
                onkeypress="handleComment(event, ${weekId}, '${dateStr}')"></textarea>
            </div>
          </div>
        </div>
      `);
    }
    current.setDate(current.getDate() + 1);
  }

  container.innerHTML = daysHTML.join('');
}

// === –§—É–Ω–∫—Ü–∏–∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ê—É–¥–∏—Ç–æ—Ä–∞ ===

export async function renderWeeksForAuditor(weeks, user, isAuditor) {
  const container = document.getElementById('weeks-container');
  if (!container) return;

  container.innerHTML = weeks.map(week => `
    <div class="card">
      <div class="week-header">
        <div class="week-title" onclick="toggleWeek(${week.id})">
          üìÖ ${week.title} (${formatDate(week.start_date)} ‚Äì ${formatDate(week.end_date)})
        </div>
        <div class="week-meta">
          <span class="status-badge status-${week.status}">${getStatusText(week.status)}</span>
          ${isAuditor(user) ? `
            <button class="btn btn-outline" onclick="editWeek(${week.id})">‚úèÔ∏è</button>
            ${week.status === 'draft' || week.status === 'pending_approval' ?
              `<button class="btn btn-success" onclick="submitForApproval(${week.id})">üì§ –ù–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ</button>` :
              `<button class="btn btn-warning" onclick="resubmitForApproval(${week.id})">üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ</button>`
            }
          ` : ''}
        </div>
      </div>
      <div class="progress-bar">
        <div class="progress-fill" style="width:${week.progress}%"></div>
      </div>
      <div class="recent-events">
        <h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è</h3>
        <div id="recent-${week.id}">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
      <div class="days-grid" id="days-${week.id}" style="display:none;"></div>
    </div>
  `).join('');

  weeks.forEach(async (week) => {
    const events = await loadEvents(week.id);
    const recentEvents = events.slice(-10).reverse();
    const recentContainer = document.getElementById(`recent-${week.id}`);
    if (recentContainer) {
      recentContainer.innerHTML = recentEvents.length ?
        recentEvents.map(e => `
          <div class="mini-event">
            <div class="mini-event-icon">${getEventIcon(e.type)}</div>
            <div class="mini-event-content">
              <strong>${e.author}</strong>: ${e.content?.substring(0, 80)}${e.content?.length > 80 ? '...' : ''}
              <div style="font-size:12px; color:#64748b; margin-top:4px;">
                ${formatDateTime(e.created_at)}
              </div>
            </div>
          </div>
        `).join('') : '<p style="color:#64748b;">–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π</p>';
    }
  });
}

export async function renderDaysForAuditor(weekId, week, events, user, isAuditor) {
  const container = document.getElementById(`days-${weekId}`);
  if (!container) return;

  const daysMap = {};
  events.forEach(e => {
    if (!daysMap[e.day_date]) daysMap[e.day_date] = [];
    daysMap[e.day_date].push(e);
  });

  const start = new Date(week.start_date);
  const end = new Date(week.end_date);
  let current = new Date(start);
  const daysHTML = [];

  while (current <= end) {
    const day = current.getDay();
    if (day !== 0 && day !== 6) {
      const dateStr = current.toISOString().split('T')[0];
      const dayPlan = week.plan?.[dateStr] || { tasks: [], approved: false };

      daysHTML.push(`
        <div class="day-card">
          <div class="day-header">
            <div class="day-date">${formatDate(dateStr)} (${getDayName(dateStr)})</div>
            ${isAuditor(user) ? `
              <button class="btn btn-outline" onclick="editDayPlan(${weekId}, '${dateStr}')">‚úèÔ∏è –ü–ª–∞–Ω</button>
            ` : ''}
          </div>
          
          ${dayPlan.tasks.length ? `
            <div style="margin-bottom: 16px;">
              <strong>–ü–ª–∞–Ω ${dayPlan.approved ? '‚úÖ –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω' : '‚è≥ –ù–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–∏'}:</strong>
              <ul style="margin-top: 8px; padding-left: 20px;">
                ${dayPlan.tasks.map(task => `<li>${task}</li>`).join('')}
              </ul>
            </div>
          ` : '<p style="color:#64748b; font-style:italic;">–ü–ª–∞–Ω –Ω–µ –∑–∞–¥–∞–Ω</p>'}
          
          <div id="events-${weekId}-${dateStr}">
            ${(daysMap[dateStr] || []).map(e => `
              <div class="event">
                <div class="event-header">
                  <span class="event-author">${e.author}</span>
                  <span class="event-time">${formatDateTime(e.created_at)}</span>
                </div>
                <div class="event-content">
                  <strong>${getEventTypeText(e.type)}:</strong> ${e.content}
                  ${e.is_approved ? '<span class="event-badge approved">–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ</span>' : '<span class="event-badge not-approved">–ù–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ</span>'}
                  
                  ${e.file_metadata ? `
                    <div style="margin-top: 12px; padding: 12px; background: #f0f9ff; border-radius: 8px;">
                      <strong>üìé –ü—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–π —Ñ–∞–π–ª:</strong><br>
                      <a href="${e.file_metadata.url}" target="_blank" style="color: #2563eb; text-decoration: underline;">
                        ${e.file_metadata.name}
                      </a>
                      <div style="font-size: 12px; color: #64748b; margin-top: 4px;">
                        ${formatFileSize(e.file_metadata.size)} ‚Ä¢ ${e.file_metadata.type}
                      </div>
                    </div>
                  ` : ''}
                </div>
                <div class="event-actions">
                  ${isAuditor(user) ? `
                    <button class="btn btn-outline" onclick="editEvent(${weekId}, '${dateStr}', '${e.id}')">‚úèÔ∏è</button>
                  ` : ''}
                </div>
              </div>
            `).join('')}
          </div>
          
          <div class="day-actions">
            ${isAuditor(user) ? `
              <button class="btn btn-outline" onclick="openEventModal(${weekId}, '${dateStr}')">‚ûï –°–æ–±—ã—Ç–∏–µ</button>
            ` : ''}
            <button class="btn btn-warning" onclick="addMeeting(${weekId}, '${dateStr}')">üìÖ –í—Å—Ç—Ä–µ—á–∞</button>
          </div>
          
          <div class="comment-form">
            <div class="form-group">
              <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π / –í–æ–ø—Ä–æ—Å:</label>
              <textarea class="form-control" placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..." 
                onkeypress="handleComment(event, ${weekId}, '${dateStr}')"></textarea>
            </div>
          </div>
        </div>
      `);
    }
    current.setDate(current.getDate() + 1);
  }

  container.innerHTML = daysHTML.join('');
}

